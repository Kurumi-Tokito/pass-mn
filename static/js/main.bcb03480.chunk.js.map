{"version":3,"sources":["components/PasswordItem/index.js","components/PasswordManager/index.js","App.js","index.js"],"names":["PasswordItem","props","profileColors","profilePicColor","Math","floor","random","length","record","deletePasswordRecord","password","id","url","name","_useState","useState","_useState2","_slicedToArray","isFlashing","setIsFlashing","_useState3","_useState4","showCopiedMessage","setShowCopiedMessage","_jsxs","className","children","_jsx","style","background","charAt","concat","type","onClick","passwordToCopy","navigator","clipboard","writeText","setTimeout","src","alt","PasswordManager","_Component","_this","_classCallCheck","_len","arguments","args","Array","_key","_callSuper","state","passwordRecords","inputUrl","inputName","masterPassword","searchInput","feedbackMessage","passwordLength","filteredPasswordRecords","filter","e","setState","getSearchRecords","_this$state","eachRecord","toLowerCase","includes","onInputUrlChange","target","value","onSearchChange","onInputNameChange","onMasterPasswordChange","onPasswordLengthChange","Number","generatePassword","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","encoder","dataBuffer","hashBuffer","hashArray","i","_byte","charCode","wrap","_context","prev","next","TextEncoder","encode","crypto","subtle","digest","sent","Uint8Array","byte","String","fromCharCode","abrupt","stop","_x","_x2","_x3","_x4","apply","addPasswordRecord","_ref2","_callee2","_this$state2","newPassword","newPasswordRecord","_context2","preventDefault","uuidv4","prevState","_toConsumableArray","_x5","_inherits","_createClass","key","_this2","_this$state3","this","searchResults","onSubmit","placeholder","onChange","htmlFor","min","max","map","Component","App","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.bcb03480.chunk.js","sourcesContent":["import {useState} from 'react'\nimport './index.css'\n\nfunction PasswordItem(props) {\n  const profileColors = [\n    '#7683cb',\n    '#f59e0b',\n    '#10b981',\n    '#f97316',\n    '#14b8a6',\n    '#b91c1c',\n    '#0ea5e9',\n  ]\n  const profilePicColor =\n    profileColors[Math.floor(Math.random() * profileColors.length)]\n  const {record, deletePasswordRecord, password} = props\n  const {id, url, name} = record\n\n  const [isFlashing, setIsFlashing] = useState(false)\n  const [showCopiedMessage, setShowCopiedMessage] = useState(false)\n\n  const deleteItem = () => {\n    deletePasswordRecord(id)\n  }\n\n  const copyToClipboard = passwordToCopy => {\n    if (passwordToCopy) {\n      navigator.clipboard.writeText(passwordToCopy)\n      setIsFlashing(true)\n      setShowCopiedMessage(true)\n      setTimeout(() => {\n        setIsFlashing(false)\n        setShowCopiedMessage(false)\n      }, 2000)\n    }\n  }\n\n  return (\n    <li className=\"password-item\">\n      <div className=\"circle\" style={{background: profilePicColor}}>\n        {name.charAt(0)}\n      </div>\n      <div className=\"details-container\">\n        <h2 className=\"website-text\">{url}</h2>\n        <div className=\"name-container\">\n          <span className=\"name-label\">Username: {name} </span>\n        </div>\n        <div className=\"password-info-container\">\n          <p className=\"password-label\">Password:</p>\n          <div className={`password-container ${isFlashing ? 'flashing' : ''}`}>\n            <p className=\"password-text\">{password || 'Not generated yet'}</p>\n            <button\n              type=\"button\"\n              onClick={() => copyToClipboard(password)}\n              className=\"copy-btn\"\n            >\n              Copy\n            </button>\n            {showCopiedMessage && (\n              <span className=\"copied-message\">Copied!</span>\n            )}\n          </div>\n        </div>\n      </div>\n      <div className=\"action-buttons\">\n        <button\n          type=\"button\"\n          onClick={deleteItem}\n          className=\"delete-btn\"\n          data-testid=\"delete\"\n        >\n          <img\n            src=\"https://assets.ccbp.in/frontend/react-js/password-manager-delete-img.png\"\n            alt=\"delete\"\n            className=\"delete-icon\"\n          />\n        </button>\n      </div>\n    </li>\n  )\n}\n\nexport default PasswordItem\n","import {Component} from 'react'\nimport {v4 as uuidv4} from 'uuid'\nimport './index.css'\nimport PasswordItem from '../PasswordItem'\n\nclass PasswordManager extends Component {\n  state = {\n    passwordRecords: [],\n    inputUrl: '',\n    inputName: '',\n    masterPassword: '',\n    searchInput: '',\n    feedbackMessage: '',\n    passwordLength: 16,\n  }\n\n  deletePasswordRecord = id => {\n    const {passwordRecords} = this.state\n    const filteredPasswordRecords = passwordRecords.filter(e => e.id !== id)\n    this.setState({passwordRecords: filteredPasswordRecords})\n  }\n\n  getSearchRecords = () => {\n    const {passwordRecords, searchInput} = this.state\n    return passwordRecords.filter(eachRecord =>\n      eachRecord.url.toLowerCase().includes(searchInput.toLowerCase()),\n    )\n  }\n\n  onInputUrlChange = e => {\n    this.setState({inputUrl: e.target.value})\n  }\n\n  onSearchChange = e => {\n    this.setState({searchInput: e.target.value})\n  }\n\n  onInputNameChange = e => {\n    this.setState({inputName: e.target.value})\n  }\n\n  onMasterPasswordChange = e => {\n    this.setState({masterPassword: e.target.value})\n  }\n\n  onPasswordLengthChange = e => {\n    this.setState({passwordLength: Number(e.target.value)})\n  }\n\n  generatePassword = async (url, name, masterPassword, length) => {\n    const data = `${url}:${name}:${masterPassword}`\n    const encoder = new TextEncoder()\n    const dataBuffer = encoder.encode(data)\n\n    const hashBuffer = await crypto.subtle.digest('SHA-256', dataBuffer)\n    const hashArray = new Uint8Array(hashBuffer)\n\n    let password = ''\n    for (let i = 0; i < length; i += 1) {\n      const byte = hashArray[i % hashArray.length]\n      const charCode = (byte % 94) + 33\n      password += String.fromCharCode(charCode)\n    }\n\n    return password\n  }\n\n  addPasswordRecord = async e => {\n    e.preventDefault()\n    const {inputUrl, inputName, masterPassword, passwordLength} = this.state\n\n    const newPassword = await this.generatePassword(\n      inputUrl,\n      inputName,\n      masterPassword,\n      passwordLength,\n    )\n\n    const newPasswordRecord = {\n      id: uuidv4(),\n      url: inputUrl,\n      name: inputName,\n      password: newPassword, // Set the generated password\n    }\n\n    this.setState(prevState => ({\n      passwordRecords: [...prevState.passwordRecords, newPasswordRecord],\n      inputUrl: '',\n      inputName: '',\n      masterPassword: '',\n      feedbackMessage: 'Password added successfully!', // Set feedback message\n    }))\n\n    setTimeout(() => {\n      this.setState({feedbackMessage: ''}) // Clear feedback message after 2 seconds\n    }, 2000)\n  }\n\n  render() {\n    const {\n      passwordLength,\n      masterPassword,\n      feedbackMessage,\n      searchInput,\n      inputUrl,\n      inputName,\n    } = this.state\n\n    const searchResults = this.getSearchRecords()\n\n    return (\n      <div className=\"app-container\">\n        <div className=\"responsive-container\">\n          <div className=\"app-header\">\n            <img\n              src=\"https://assets.ccbp.in/frontend/react-js/password-manager-logo-img.png\"\n              alt=\"app logo\"\n              className=\"app-logo\"\n            />\n          </div>\n          <div className=\"card-container manager-container\">\n            <div className=\"card form-container\">\n              <form\n                className=\"card-responsive\"\n                onSubmit={this.addPasswordRecord}\n              >\n                <h1 className=\"form-heading\">Add New Password</h1>\n                <div className=\"input-container\">\n                  <input\n                    className=\"input\"\n                    type=\"text\"\n                    placeholder=\"Enter Website\"\n                    value={inputUrl} // Use destructured variable\n                    onChange={this.onInputUrlChange}\n                  />\n                </div>\n                <div className=\"input-container\">\n                  <input\n                    className=\"input\"\n                    type=\"text\"\n                    placeholder=\"Enter Username\"\n                    value={inputName} // Use destructured variable\n                    onChange={this.onInputNameChange}\n                  />\n                </div>\n                <div className=\"input-container\">\n                  <input\n                    className=\"input\"\n                    type=\"password\"\n                    placeholder=\"Enter Master Password\"\n                    value={masterPassword} // This is already destructured\n                    onChange={this.onMasterPasswordChange}\n                  />\n                </div>\n                <div className=\"input-container\">\n                  <label htmlFor=\"passwordLength\" className=\"length-label\">\n                    <span className=\"length-value\">\n                      Password Length: {passwordLength}\n                    </span>\n                  </label>\n                  <input\n                    id=\"passwordLength\"\n                    type=\"range\"\n                    min=\"8\"\n                    max=\"64\"\n                    value={passwordLength}\n                    onChange={this.onPasswordLengthChange}\n                    className=\"length-slider\"\n                  />\n                </div>\n                <div className=\"btn-container\">\n                  <button className=\"add-btn\" type=\"submit\">\n                    Save\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n\n          {feedbackMessage && (\n            <div className=\"feedback-message\">{feedbackMessage}</div>\n          )}\n\n          <div className=\"card-container\">\n            <div className=\"card-responsive no-password-container\">\n              <div className=\"passwords-header\">\n                <h1 className=\"passwords-header-title\">\n                  Your Passwords\n                  <p className=\"results-count\"> {searchResults.length}</p>\n                </h1>\n                <div className=\"search-container\">\n                  <input\n                    className=\"search-input\"\n                    type=\"search\"\n                    placeholder=\"Search\"\n                    value={searchInput}\n                    onChange={this.onSearchChange}\n                  />\n                </div>\n              </div>\n              <hr className=\"hr-line\" />\n              {searchResults.length !== 0 ? (\n                <ul className=\"passwords-list-container\">\n                  {searchResults.map(eachRecord => (\n                    <PasswordItem\n                      key={eachRecord.id}\n                      record={eachRecord}\n                      deletePasswordRecord={this.deletePasswordRecord}\n                      password={eachRecord.password}\n                    />\n                  ))}\n                </ul>\n              ) : (\n                <div className=\"no-password-container\">\n                  <img\n                    src=\"https://assets.ccbp.in/frontend/react-js/no-passwords-img.png\"\n                    alt=\"no passwords\"\n                    className=\"no-passwords-image\"\n                  />\n                  <p className=\"no-passwords-title\">No Passwords</p>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PasswordManager\n","import './App.css'\nimport PasswordManager from './components/PasswordManager'\n\nfunction App() {\n  return <PasswordManager />\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n)\n"],"sourceRoot":""}